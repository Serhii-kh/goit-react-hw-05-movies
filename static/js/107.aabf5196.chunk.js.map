{"version":3,"file":"static/js/107.aabf5196.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,mCACTC,SAAU,SAGX,IAAMC,EACK,sBADLA,EAES,eAFTA,EAGQ,SAHRA,EAIE,WAJFA,EAKI,WAGEC,EAAmB,mCAAG,2FACzBC,EAAaF,EADY,mBAIlBH,EAAAA,EAAAA,GAAM,GAAD,OAAIK,EAAJ,MAJa,gIAAH,qDAQnBC,EAAiB,mCAAG,WAAOC,GAAP,8EACxBC,EAAiBL,EADO,mBAIhBH,EAAAA,EAAAA,GAAM,GAAD,OAAIQ,EAAJ,kBAA0BD,IAJf,wEAM7BE,QAAQC,IAAR,MAN6B,yDAAH,sDAUjBC,EAAc,mCAAG,WAAMC,GAAN,8EACpBC,EAAgBV,EADI,mBAIbH,EAAAA,EAAAA,GAAM,GAAD,OAAIa,GAAJ,OAAkBD,IAJV,wEAM1BH,QAAQC,IAAR,MAN0B,yDAAH,sDAUdI,EAAU,mCAAG,WAAMF,GAAN,gFAChBC,EAAuBV,EAAVY,EAAUZ,EADP,mBAITH,EAAAA,EAAAA,GAAM,GAAD,OAAIa,GAAJ,OAAkBD,GAAlB,OAAuBG,IAJnB,wEAMtBN,QAAQC,IAAR,MANsB,yDAAH,sDAUVM,EAAY,mCAAG,WAAMJ,GAAN,gFAClBC,EAAyBV,EAAZc,EAAYd,EADP,mBAIXH,EAAAA,EAAAA,GAAM,GAAD,OAAIa,GAAJ,OAAkBD,GAAlB,OAAuBK,IAJjB,wEAMxBR,QAAQC,IAAR,MANwB,yDAAH,qD,sFChBzB,UAjCa,WACZ,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MASjB,OAPAC,EAAAA,EAAAA,YAAU,YACTnB,EAAAA,EAAAA,MAAsBoB,MAAK,SAAAC,GAC1B,IAAgBC,EAAcD,EAAtBE,KAAQD,QAChBN,EAAUM,EACV,GACD,GAAE,KAGF,iCACC,sCACA,wBACEP,EAAOS,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,MAAP,OACX,yBACA,SAAC,KAAD,CAAMC,GAAE,gBAAWlB,GAAMmB,MAAO,CAAEC,KAAMX,GAAxC,SACEQ,KAFOjB,EADE,QAWf,C","sources":["components/Api/fetchMovies.js","components/pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'e4624f9b78ee3bac020d603dacbf8ced',\n  language: 'en-US',\n};\n\n const END_POINTS = {\n  TRANDING: 'trending/movie/week',\n  SEARCH_MOVIE: 'search/movie',\n  MOVIE_BY_ID: 'movie/',\n  CASTS: '/credits',\n  REVIEWS: '/reviews',\n};\n\nexport const fetchTrandingMovies = async () => {\n  const { TRANDING } = END_POINTS;\n\n  try {\n    return await axios(`${TRANDING}?`);\n  } catch (error) {}\n};\n\nexport const fetchMovieByQuery = async (query) => {\n\tconst { SEARCH_MOVIE } = END_POINTS;\n\n  try {\n    return await axios(`${SEARCH_MOVIE}?query=${query}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieById = async id => {\n  const { MOVIE_BY_ID } = END_POINTS;\n\n  try {\n    return await axios(`${MOVIE_BY_ID}${id}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCasts = async id => {\n  const { MOVIE_BY_ID, CASTS } = END_POINTS;\n\n  try {\n    return await axios(`${MOVIE_BY_ID}${id}${CASTS}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviews = async id => {\n  const { MOVIE_BY_ID, REVIEWS } = END_POINTS;\n\n  try {\n    return await axios(`${MOVIE_BY_ID}${id}${REVIEWS}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { fetchTrandingMovies } from \"components/Api/fetchMovies\";\nimport PropTypes from 'prop-types';\n\nconst Home = () => {\n\tconst [movies, setMovies] = useState([])\n\tconst location = useLocation()\n\n\tuseEffect(() => {\n\t\tfetchTrandingMovies().then(response => {\n\t\t\tconst { data: { results } } = response\n\t\t\tsetMovies(results)\n\t\t})\n\t}, [])\n\n\treturn (\n\t\t<>\n\t\t\t<h1>In Trand</h1>\n\t\t\t<ul>\n\t\t\t\t{movies.map(({ id, title }) =>\n\t\t\t\t(<li key={id}>\n\t\t\t\t\t<Link to={`movie/${id}`} state={{ from: location }}>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</Link>\n\t\t\t\t</li>)\n\t\t\t\t)\n\t\t\t\t}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nHome.propTypes = {\n\tmovies: PropTypes.array,\n}\n\n\nexport default Home;"],"names":["axios","api_key","language","END_POINTS","fetchTrandingMovies","TRANDING","fetchMovieByQuery","query","SEARCH_MOVIE","console","log","fetchMovieById","id","MOVIE_BY_ID","fetchCasts","CASTS","fetchReviews","REVIEWS","useState","movies","setMovies","location","useLocation","useEffect","then","response","results","data","map","title","to","state","from"],"sourceRoot":""}