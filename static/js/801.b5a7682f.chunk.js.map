{"version":3,"file":"static/js/801.b5a7682f.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,mCACTC,SAAU,SAGX,IAAMC,EACK,sBADLA,EAES,eAFTA,EAGQ,SAHRA,EAIE,WAJFA,EAKI,WAGEC,EAAmB,mCAAG,2FACzBC,EAAaF,EADY,mBAIlBH,EAAAA,EAAAA,GAAM,GAAD,OAAIK,EAAJ,MAJa,gIAAH,qDAQnBC,EAAiB,mCAAG,WAAOC,GAAP,8EACxBC,EAAiBL,EADO,mBAIhBH,EAAAA,EAAAA,GAAM,GAAD,OAAIQ,EAAJ,kBAA0BD,IAJf,wEAM7BE,QAAQC,IAAR,MAN6B,yDAAH,sDAUjBC,EAAc,mCAAG,WAAMC,GAAN,8EACpBC,EAAgBV,EADI,mBAIbH,EAAAA,EAAAA,GAAM,GAAD,OAAIa,GAAJ,OAAkBD,IAJV,wEAM1BH,QAAQC,IAAR,MAN0B,yDAAH,sDAUdI,EAAU,mCAAG,WAAMF,GAAN,gFAChBC,EAAuBV,EAAVY,EAAUZ,EADP,mBAITH,EAAAA,EAAAA,GAAM,GAAD,OAAIa,GAAJ,OAAkBD,GAAlB,OAAuBG,IAJnB,wEAMtBN,QAAQC,IAAR,MANsB,yDAAH,sDAUVM,EAAY,mCAAG,WAAMJ,GAAN,gFAClBC,EAAyBV,EAAZc,EAAYd,EADP,mBAIXH,EAAAA,EAAAA,GAAM,GAAD,OAAIa,GAAJ,OAAkBD,GAAlB,OAAuBK,IAJjB,wEAMxBR,QAAQC,IAAR,MANwB,yDAAH,qD,2GCrDzB,GAAgB,aAAe,6B,SCoC/B,EAhCc,WACb,OAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OALAE,EAAAA,EAAAA,YAAU,YACTT,EAAAA,EAAAA,IAAWO,GAASG,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASK,EAAKC,KAA5B,GAEzB,GAAE,CAACL,KAGH,gCACEF,IAAS,eAAIQ,UAAWC,EAAAA,YAAf,SAERT,EAAMU,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAb,OAAiC,2BAC1C,uBAAID,KACJ,gBACCH,UAAWC,EAAAA,aACXI,IAAG,yCAAoCD,GACvCE,IAAG,UAAKH,OAL0ClB,EAA1C,MAUM,IAAjBO,EAAMe,SAAgB,0BACtB,uFAMH,C","sources":["components/Api/fetchMovies.js","webpack://react-homework-template/./src/components/Casts/Casts.module.css?6903","components/Casts/Casts.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'e4624f9b78ee3bac020d603dacbf8ced',\n  language: 'en-US',\n};\n\n const END_POINTS = {\n  TRANDING: 'trending/movie/week',\n  SEARCH_MOVIE: 'search/movie',\n  MOVIE_BY_ID: 'movie/',\n  CASTS: '/credits',\n  REVIEWS: '/reviews',\n};\n\nexport const fetchTrandingMovies = async () => {\n  const { TRANDING } = END_POINTS;\n\n  try {\n    return await axios(`${TRANDING}?`);\n  } catch (error) {}\n};\n\nexport const fetchMovieByQuery = async (query) => {\n\tconst { SEARCH_MOVIE } = END_POINTS;\n\n  try {\n    return await axios(`${SEARCH_MOVIE}?query=${query}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieById = async id => {\n  const { MOVIE_BY_ID } = END_POINTS;\n\n  try {\n    return await axios(`${MOVIE_BY_ID}${id}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCasts = async id => {\n  const { MOVIE_BY_ID, CASTS } = END_POINTS;\n\n  try {\n    return await axios(`${MOVIE_BY_ID}${id}${CASTS}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviews = async id => {\n  const { MOVIE_BY_ID, REVIEWS } = END_POINTS;\n\n  try {\n    return await axios(`${MOVIE_BY_ID}${id}${REVIEWS}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"profile_path\":\"Casts_profile_path__Qk6PP\"};","import { fetchCasts } from \"components/Api/fetchMovies\"\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport css from '../Casts/Casts.module.css'\n\nconst Casts = () => {\n\tconst [casts, setCasts] = useState([])\n\tconst { movieId } = useParams()\n\n\tuseEffect(() => {\n\t\tfetchCasts(movieId).then(({ data }) => setCasts(data.cast))\n\n\t}, [movieId])\n\n\treturn (\n\t\t<>\n\t\t\t{casts && <ul className={css.casts__list}>\n\t\t\t\t{\n\t\t\t\t\tcasts.map(({ id, name, profile_path }) => (<li key={id}>\n\t\t\t\t\t\t<p>{name}</p>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName={css.profile_path}\n\t\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w300${profile_path}`}\n\t\t\t\t\t\t\talt={`${name}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>))\n\t\t\t\t}\n\t\t\t</ul>}\n\t\t\t{casts.length === 0 && <div>\n\t\t\t\t<p>\n\t\t\t\t\tSory, but we haven`t info about casts for this movie...\n\t\t\t\t</p>\n\t\t\t</div>}\n\t\t</>\n\t)\n}\n\nexport default Casts;"],"names":["axios","api_key","language","END_POINTS","fetchTrandingMovies","TRANDING","fetchMovieByQuery","query","SEARCH_MOVIE","console","log","fetchMovieById","id","MOVIE_BY_ID","fetchCasts","CASTS","fetchReviews","REVIEWS","useState","casts","setCasts","movieId","useParams","useEffect","then","data","cast","className","css","map","name","profile_path","src","alt","length"],"sourceRoot":""}